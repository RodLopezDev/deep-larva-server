AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  deep-larva-server

  Sample SAM Template for deep-larva-server

Globals:
  Function:
    Timeout: 30
    MemorySize: 256
    LoggingConfig:
      LogFormat: JSON

Resources:
  DeepLarvaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: deep_larva_function/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: PictureTable
        - DynamoDBCrudPolicy:
            TableName: BoxDetectionTable
        - S3CrudPolicy:
            BucketName: deep-larva-storage
      Events:
        ApiGateway:
          Type: "Api"
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref DeepLarvaApi

  DeepLarvaApi:
    Type: "AWS::Serverless::Api"
    DependsOn: ApiCWLRoleArn
    Properties:
      StageName: dev
      Auth:
        ApiKeyRequired: true
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      MethodSettings:
        - LoggingLevel: INFO
          MetricsEnabled: True
          ResourcePath: "/*"
          HttpMethod: "*"

  ApiCWLRoleArn:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt CloudWatchRole.Arn

  CloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Action: "sts:AssumeRole"
          Effect: Allow
          Principal:
            Service: apigateway.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"

  PictureTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: PictureTable
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: deviceId
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: IdAndDeviceIdIndex
          KeySchema:
            - AttributeName: id
              KeyType: HASH
            - AttributeName: deviceId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  BoxDetectionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: BoxDetectionTable
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: pictureId
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: IdAndPictureIdIndex
          KeySchema:
            - AttributeName: id
              KeyType: HASH
            - AttributeName: pictureId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  DeepLarvaS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: deep-larva-storage
