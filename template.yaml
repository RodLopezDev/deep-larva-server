AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  deep-larva-server

  Sample SAM Template for deep-larva-server

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    MemorySize: 256

    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
Resources:
  DeepLarvaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: deep_larva_function/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: PictureTable
      Events:
        ApiGateway:
          Type: "Api"
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref DeepLarvaApi

  DeepLarvaApi:
    Type: "AWS::Serverless::Api"
    DependsOn: ApiCWLRoleArn
    Properties:
      StageName: dev
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      MethodSettings:
        - LoggingLevel: INFO
          MetricsEnabled: True
          ResourcePath: "/*"
          HttpMethod: "*"

  ApiCWLRoleArn:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt CloudWatchRole.Arn

  PictureTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: PictureTable
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
